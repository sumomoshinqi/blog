<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | sumomoshinqi]]></title>
  <link href="http://www.sumomoshinqi.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://www.sumomoshinqi.com/"/>
  <updated>2015-08-30T16:41:59+08:00</updated>
  <id>http://www.sumomoshinqi.com/</id>
  <author>
    <name><![CDATA[sumomoshinqi]]></name>
    <email><![CDATA[edam.lqq@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix annoying perl locale warnings]]></title>
    <link href="http://www.sumomoshinqi.com/blog/2015/08/09/fix-annoying-perl-locale-warnings/"/>
    <updated>2015-08-09T22:22:07+08:00</updated>
    <id>http://www.sumomoshinqi.com/blog/2015/08/09/fix-annoying-perl-locale-warnings</id>
    <content type="html"><![CDATA[<p>When I was setting up Postgres on a new Linux VM server last Friday, a perl warning was keeping showing up.</p>

<!--more-->


<pre><code class="text">perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
    LANGUAGE = (unset),
    LC_ALL = (unset),
    LC_PAPER = "zh_CN.UTF-8",
    LC_ADDRESS = "zh_CN.UTF-8",
    LC_MONETARY = "zh_CN.UTF-8",
    LC_NUMERIC = "zh_CN.UTF-8",
    LC_TELEPHONE = "zh_CN.UTF-8",
    LC_IDENTIFICATION = "zh_CN.UTF-8",
    LC_MEASUREMENT = "zh_CN.UTF-8",
    LC_TIME = "zh_CN.UTF-8",
    LC_NAME = "zh_CN.UTF-8",
    LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
</code></pre>

<p>Well it&rsquo;s annoying. XD</p>

<p>Alright let&rsquo;s fix this.</p>

<pre><code class="sh">sudo locale-gen en_US en_US.UTF-8
[sudo] password for administrator: 
Generating locales...
  en_US.ISO-8859-1... done
  en_US.UTF-8... up-to-date
Generation complete.
</code></pre>

<p>Then</p>

<pre><code>sudo dpkg-reconfigure locales
Generating locales...
  en_AG.UTF-8... done
  en_AU.UTF-8... done
  en_BW.UTF-8... done
  en_CA.UTF-8... done
  en_DK.UTF-8... done
  en_GB.UTF-8... done
  en_HK.UTF-8... done
  en_IE.UTF-8... done
  en_IN.UTF-8... done
  en_NG.UTF-8... done
  en_NZ.UTF-8... done
  en_PH.UTF-8... done
  en_SG.UTF-8... done
  en_US.ISO-8859-1... up-to-date
  en_US.UTF-8... up-to-date
  en_ZA.UTF-8... done
  en_ZM.UTF-8... done
  en_ZW.UTF-8... done
  zh_CN.UTF-8... up-to-date
Generation complete.
</code></pre>

<p>OK. Done. I guess there was a way to simply ignore these settings. Whatever.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New partition set up on Linux]]></title>
    <link href="http://www.sumomoshinqi.com/blog/2015/08/09/new-partition-set-up-on-linux/"/>
    <updated>2015-08-09T15:54:16+08:00</updated>
    <id>http://www.sumomoshinqi.com/blog/2015/08/09/new-partition-set-up-on-linux</id>
    <content type="html"><![CDATA[<p>This article demonstrates how to set up new disk partition and make it auto-mounted on boot via Linux CLI. Instance here is a Ubuntu 12.04 remote server which just has a new disk attached to.</p>

<!--more-->


<p></p>

<h3>1. Find all disks on the computer</h3>

<pre><code class="sh">    sudo fdisk -l
</code></pre>

<p>For me, it looks like</p>

<pre><code class="text">    administrator@626bdbc5:~$ sudo fdisk -l
    [sudo] password for administrator: 

    Disk /dev/sda: 32.2 GB, 32212254720 bytes
    255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
    Units = sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disk identifier: 0x00028d90

       Device Boot      Start         End      Blocks   Id  System
    /dev/sda1   *        2048      499711      248832   83  Linux
    /dev/sda2          501758    41940991    20719617    5  Extended
    /dev/sda5          501760    41940991    20719616   8e  Linux LVM

    Disk /dev/mapper/ubuntu-var: 3997 MB, 3997171712 bytes
    255 heads, 63 sectors/track, 485 cylinders, total 7806976 sectors
    Units = sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disk identifier: 0x00000000

    Disk /dev/mapper/ubuntu-var doesn't contain a valid partition table

    Disk /dev/mapper/ubuntu-swap: 1996 MB, 1996488704 bytes
    255 heads, 63 sectors/track, 242 cylinders, total 3899392 sectors
    Units = sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disk identifier: 0x00000000

    Disk /dev/mapper/ubuntu-swap doesn't contain a valid partition table

    Disk /dev/mapper/ubuntu-root: 15.2 GB, 15221129216 bytes
    255 heads, 63 sectors/track, 1850 cylinders, total 29728768 sectors
    Units = sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disk identifier: 0x00000000

    Disk /dev/mapper/ubuntu-root doesn't contain a valid partition table

    Disk /dev/sdb: 107.4 GB, 107374182400 bytes
    255 heads, 63 sectors/track, 13054 cylinders, total 209715200 sectors
    Units = sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disk identifier: 0x00000000

    Disk /dev/sdb doesn't contain a valid partition table
</code></pre>

<h3>2. Use fdisk to create the partition</h3>

<p>Here, for example, I&rsquo;m creating a new partition using /dev/sdb</p>

<pre><code class="sh">    sudo fdisk /dev/sdb
</code></pre>

<p>Because sdb is a new disk, you&rsquo;ll see</p>

<pre><code class="text">    Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel
    Building a new DOS disklabel with disk identifier 0x5f40a261.
    Changes will remain in memory only, until you decide to write them.
    After that, of course, the previous content won't be recoverable.

    Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)
</code></pre>

<p>Create a new partition following instructions.</p>

<pre><code class="text">Command (m for help): m
Command action
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition
   l   list known partition types
   m   print this menu
   n   add a new partition
   o   create a new empty DOS partition table
   p   print the partition table
   q   quit without saving changes
   s   create a new empty Sun disklabel
   t   change a partition's system id
   u   change display/entry units
   v   verify the partition table
   w   write table to disk and exit
   x   extra functionality (experts only)

Command (m for help): n     # Here we type n to create a new partition
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p       # Choose primary
Partition number (1-4, default 1):      # Use default
Using default value 1
First sector (2048-209715199, default 2048):    # Use default
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-209715199, default 209715199):  # Use default
Using default value 209715199

Command (m for help): w     # Write back
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
</code></pre>

<h3>3. Format the partition</h3>

<pre><code class="sh">    sudo mkfs.ext4 /dev/sdb1 # Format new partition with ext4 file system
</code></pre>

<p>You&rsquo;ll see output like</p>

<pre><code class="text">mke2fs 1.42.9 (4-Feb-2014)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
6553600 inodes, 26214144 blocks
1310707 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=4294967296
800 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
    32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 
    4096000, 7962624, 11239424, 20480000, 23887872

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done  
</code></pre>

<h3>4. Let the new partition mounted automatically on boot</h3>

<p>Edit system configuration.</p>

<pre><code class="sh">    sudo vim /etc/fstab
</code></pre>

<p>Add a new line for the partition just created.</p>

<pre><code class="text"># /etc/fstab: static file system information.
#
# Use 'blkid -o value -s UUID' to print the universally unique identifier
# for a device; this may be used with UUID= as a more robust way to name
# devices that works even if disks are added and removed. See fstab(5).
#
# &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;
proc            /proc           proc    nodev,noexec,nosuid 0       0
/dev/mapper/ubuntu-root /               ext4    errors=remount-ro 0       1
# /boot was on /dev/sda1 during installation
UUID=4936e7c7-515b-4bbd-b9e4-7b6dbbd5239a /boot           ext2    defaults        0       2
/dev/mapper/ubuntu-var /var            ext4    defaults        0       2
/dev/mapper/ubuntu-swap none            swap    sw              0       0
/dev/fd0        /media/floppy0  auto    rw,user,noauto,exec,utf8 0       0
# Add new entry for sdb1
/dev/sdb1       /data   ext4    defaults        0       0
</code></pre>

<h3>5. Reboot and Check result</h3>

<pre><code class="sh">    sudo reboot
</code></pre>

<p>Check result
<code>sh
    df
</code></p>

<p>Here sdb1 is successfully auto-mounted.</p>

<pre><code>Filesystem              1K-blocks    Used Available Use% Mounted on
/dev/mapper/ubuntu-root  14499760 1824804  11915356  14% /
none                            4       0         4   0% /sys/fs/cgroup
udev                      4071712       4   4071708   1% /dev
tmpfs                      817024     812    816212   1% /run
none                         5120       4      5116   1% /run/lock
none                      4085116       0   4085116   0% /run/shm
none                       102400       0    102400   0% /run/user
/dev/mapper/ubuntu-var    3776568  866076   2698936  25% /var
/dev/sda1                  233191   41801    178949  19% /boot
/dev/sdb1               103080224   61044  97759968   1% /data
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize MongoDB maxConn]]></title>
    <link href="http://www.sumomoshinqi.com/blog/2015/08/08/customize-mongodb-maxconn/"/>
    <updated>2015-08-08T23:29:05+08:00</updated>
    <id>http://www.sumomoshinqi.com/blog/2015/08/08/customize-mongodb-maxconn</id>
    <content type="html"><![CDATA[<p>Sometimes we need MongoDB support very large number of concurrent connections. To do that, following configurations should be modified.</p>

<!--more-->


<h3>1. Kill current mongod processes(es)</h3>

<pre><code class="sh">    ps ax | grep mongod    # Find current mongod processes
    kill -9 PID            # Kill them
</code></pre>

<h3>2. Unlock MongoDB max connection restriction</h3>

<p>Edit system configuration file <strong>limits.conf</strong></p>

<pre><code class="sh">    sudo vim /etc/security/limits.conf  # Configuration file for the pam_limits module
</code></pre>

<blockquote><p>For more information see <a href="http://linux.die.net/man/5/limits.conf">limits.conf</a></p></blockquote>

<p>Add following lines to change system resource limits
Here <strong>*</strong> means for all users, <strong>noproc</strong> means max user processes, <strong>nofile</strong> means max open files</p>

<pre><code class="text">    root - core unlimited
    *    - core unlimited
    * soft noproc 65535 
    * hard noproc 65535 
    * soft nofile 409600 
    * hard nofile 409600
</code></pre>

<p>Reboot to apply all these changes</p>

<blockquote><p>Actually reboot <a href="http://unix.stackexchange.com/questions/108603/do-changes-in-etc-security-limits-conf-require-a-reboot">is not a must</a>, yet it&rsquo;s the easiest way to apply all changes.</p></blockquote>

<pre><code class="sh">    sudo reboot
</code></pre>

<p>Now check ulimit settings</p>

<pre><code class="sh">    ulimit -a
</code></pre>

<p>You shall see your changes here</p>

<pre><code>    core file size          (blocks, -c) unlimited
    data seg size           (kbytes, -d) unlimited
    scheduling priority             (-e) 0
    file size               (blocks, -f) unlimited
    pending signals                 (-i) 31420
    max locked memory       (kbytes, -l) 64
    max memory size         (kbytes, -m) unlimited
    open files                      (-n) 409600
    pipe size            (512 bytes, -p) 8
    POSIX message queues     (bytes, -q) 819200
    real-time priority              (-r) 0
    stack size              (kbytes, -s) 8192
    cpu time               (seconds, -t) unlimited
    max user processes              (-u) 31420
    virtual memory          (kbytes, -v) unlimited
    file locks                      (-x) unlimited
</code></pre>

<h3>3. Restart <strong>mongod</strong> with your own <strong>maxConns</strong></h3>

<pre><code class="sh">    sudo mongod --maxConns=20000
</code></pre>

<p>Probably you&rsquo;ll see this error</p>

<pre><code>    exception in initAndListen std::exception: locale::facet::_S_create_c_locale name not valid, terminating
</code></pre>

<p>To fix it, set <strong>LC_ALL</strong>
<code>sh
    export LC_ALL="en_US.UTF-8"
</code></p>

<p>Restart mongod in background</p>

<pre><code class="sh">    sudo mongod --maxConns=20000 &amp;
</code></pre>

<p>Enter mongo shell</p>

<pre><code class="sh">    mongd
</code></pre>

<p>and check current <strong>maxConns</strong></p>

<pre><code class="sh">    &gt; db.serverStatus().connections
    { "current" : 1, "available" : 19999, "totalCreated" : NumberLong(1) }
</code></pre>

<hr />

<p>For Jmeter users.
1. Run <em>Jmeter PerfMon agent</em> on the server to monitor server system status
You need first upload <strong>ServerAgent-X.X.X.zip</strong> to the server e.g. using <strong>sftp</strong>
Then unzip it anywhere you like :-)
It now looks something like</p>

<pre><code class="sh">    CMDRunner.jar  lib/  LICENSE  ServerAgent-2.2.1.zip  ServerAgent.jar  startAgent.bat  startAgent.sh
</code></pre>

<p>Run following command to keep the agent running in background</p>

<pre><code class="sh">./startAgent.sh --udp-port 0 --tcp-port 4444 &amp;
</code></pre>

<p>Now add listeners like <strong>jp@gc-PrfMon Metrics Colletor</strong> to your thread groups, configure the port your&rsquo;ll listen to and run your tests.</p>
]]></content>
  </entry>
  
</feed>
